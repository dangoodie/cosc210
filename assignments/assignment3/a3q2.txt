Identify functional dependencies
    - student_id -> first_name. last_name, date_of_birth
    - unit_code -> unit_name
    - degree -> school, degree_length

Define Keys
    - student_id
    - unit_code
    - degree
    - student_id, unit_code, degree (composite key)


Normalise the schema
    Student Table
        - student_id (Primary Key)
        - first_name
        - last_name
        - date_of_birth
    
    Unit Table
    	- unit_code (Primary Key)
    	- unit_name

    Degree Table
    	- degree (Primary Key)
    	- school
    	- degree_length
    	
    Enrollment Table
    	- student_id (Foreign Key)
    	- unit_code (Foreign Key)
    	- degree (Foreign Key)
    	
Every table fully depends on its primary key, ensuring compliance with third normal form (3NF). The Enrollment table represents the relationship between students and the units they are enrolled in, as well as the degrees these units count towards. Using a composite key prevents students from enrolling in the same unit for the same degree multiple times, thus reducing redundancy and maintaining 3NF compliance.
